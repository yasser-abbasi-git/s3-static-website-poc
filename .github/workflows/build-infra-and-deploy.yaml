name: Deploy Infrastructure and Deploy site

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
env:
  AWS_REGION: ${{ vars.REGION }}
  IAM_ROLE_ARN: ${{ secrets.OIDC_ROLE_ARN }}
  S3_BUCKET_NAME : ${{ vars.STATIC_SITE_BUCKET_NAME }}
  TF_WORKING_DIR: ./infrastructure/code
jobs:
  terraform:
    name: Terraform and Sync Static Site Files
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ env.IAM_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.5
    
    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      if: vars.TF_DESTROY == 'false'
      run: terraform plan -no-color -input=false
     
      # On push to "main", deploy the Terraform infrastructure
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && vars.TF_DESTROY == 'false'
      run: terraform apply -auto-approve -input=false

    - name: Terraform Destroy
      if: vars.TF_DESTROY == 'true'
      run: terraform apply -destroy -auto-approve
    
    - name: Sync files to S3 bucket
      if: vars.TF_DESTROY == 'false'
      run: |
        aws s3 sync ../../static-site/ s3://${{ env.S3_BUCKET_NAME }} --delete
